---
title: "HW3-drafting-viz"
author: Hannah Irish
editor: visual
format:
  html:
    embed-resources: true
editor_options: 
  chunk_output_type: console
---

Load packages and fonts

```{r}
## Include necessary packages
library(showtext)
library(tidyverse)
library(sf)

##Add typeface "Inter" from Google Fonts
font_add_google(name = "Inter", family = "inter")
##Add typeface "Barlow" from Google Fonts
font_add_google(name = "Barlow", family="barlow")

## enable use of Google Fonts
showtext_auto()
```

## HW 3: Preparing For Final Assignment

1.  I plan to pursue option #2 for HW4, the infographic option.
2.  My overarching question is how U.S. homes' census region contributes to their energy insecurity in 2020. My sub-questions are a) How many homes are in each region, b) Which census regions are most prone to energy insecurity, and c) Which energy insecurity indicators dominate each region
3.  The energy insecurity section of the Residential Energy Consumption Survey (RECS) from the U.S. Energy Information Administration (EIA) has many demographic/household characteristics. They show the number of households in the U.S. that report each energy indicator (any indicator, forgoing food/medicine, leaving home at unhealthy temperature, unable to use AC, unable to use heat, receiving a disconnect or delivery stop notice) by each of these factors. I will specifically utilize the census data and look at location-specific energy insecurity survey reports. This is all for 2020, the most recent survey year.

## Hand-Drawn Plan

I did this on my iPad but it is hand drawn!

First, a map showing the different census regions with their total households to give context to the data:

```{r}

#| eval: true
#| echo: false
#| fig-align: "center"
#| out-width: "100%"
#| fig-alt: "Drawing of the United States with colors labeling census regions and each region labelled with its name and the number of homes it contains. The South Atlantic region (Florida, Georgia, South Carolina, North Carolina, Virginia, West Virginia, Maryland) has the most households while New England (Connecticut, Rhode Island, Massachussetts, New Hampshire, Vermont, and Maine) has the fewest households "
knitr::include_graphics(here::here("images/viz1_graph.png"))
```

Second, a polar bar graph showing the percent of homes in each region experiencing any energy insecurity:

```{r}

#| eval: true
#| echo: false
#| fig-align: "center"
#| out-width: "100%"
#| fig-alt: "A polar bar chart/pie graph showing the percent of homes in each census region experiencing energy insecurity. Pacific has the most, whereas the Middle Atlantic has the least"
knitr::include_graphics(here::here("images/viz2_polarbar.png"))

```

Finally, a collection of radar graphs showing the relative dominance of each energy indicator in each region

```{r}

#| eval: true
#| echo: false
#| fig-align: "center"
#| out-width: "100%"
#| fig-alt: "4 radar graphs showing each general census region with the specific regions highlighted, showing which energy insecurity indicators are most prevalent in each region "
knitr::include_graphics(here::here("images/viz3_radars.png"))
```

## Read in data

```{r}

##read in census_data that was wrangled for HW2 and save it as dataframe "census_nrg" 
census_nrg <- read_csv(here::here("data_intermediate/census_data.csv"))

census_any <- census_nrg %>% 
  filter(indicator == "any_insecurity")
  
  
specific_region_order <- c( "East North Central", "West North Central", "Mountain", "Pacific","South Atlantic" , "East South Central", "West South Central" , "New England", "Middle Atlantic")


census_any$specific_region <- factor(census_any$specific_region, levels = specific_region_order)

##create a color palette for each of the specific census regions

region_palette <- c("Pacific" = "springgreen4", "Mountain" = "#AFE1AF", "West North Central" = "#FAC898", "East North Central" = "#FFA500", "New England" = '#D22B2B', "Middle Atlantic" = "#FAA0A0", "South Atlantic" = "#0F52BA", "East South Central" = "#6495ED", "West South Central" = "#87CEEB")
```

## Map

Read in Data and Prepare

```{r}


##read in shapefile of the US states
states <- read_sf(here::here("data/states/US_State_Boundaries.shp")) %>% 
  ##put variable names in lowercase_snake
  janitor::clean_names() %>% 
  ## select only the fid, state abbreviation, and the geometry
  select(1,4, 17) 

states <- st_transform(states, crs = 3857)

##make l ist of which abbreviations go with each census region
west_list <- c("AK", "HI", "WA", "CA", "OR")
mountain_list <- c("MT", "ID", "WY", "NV", "UT", "CO", "AZ", "NM")
wnc_list <- c("ND", "SD", "NE", "KS", "MN", "IA", "MO")
enc_list <- c("WI", "IL", "IN", "MI", "OH")
new_england_list <- c("CT", "MA", "RI", "NH", "VT", "ME")
mid_atlantic_list <- c("PA", "NJ", "NY")
wsc_list <- c("TX", "OK", "AR", "LA")
esc_list <- c("KY", "TN", "MS", "AL")
s_atlantic_list <- c("DE", "DC", "MD", "NC", "VA", "WV", "GA", "FL", "SC")

##mutate so that the region goes with the appropriate states
states <- states %>% 
mutate(specific_region = case_when(
    state_abbr %in% west_list ~ "Pacific",
    state_abbr %in% mountain_list ~ "Mountain",
    state_abbr %in% wnc_list ~ "West North Central",
    state_abbr %in% enc_list ~ "East North Central",
    state_abbr %in% new_england_list ~ "New England",
    state_abbr %in% mid_atlantic_list ~ "Middle Atlantic",
    state_abbr %in% wsc_list ~ "West South Central",
    state_abbr %in% esc_list ~ "East South Central",
    state_abbr %in% s_atlantic_list ~ "South Atlantic",
    TRUE ~ "Other"  # Default value if none of the conditions are met
  )) %>% 
  filter(!state_abbr %in% c("HI","AK", "PR", "VI")) 

n_homes_map <- census_nrg %>% 
  filter(indicator == "any_insecurity") %>% 
  select(1,2)

states <- left_join(states, n_homes_map, by = "specific_region")

west_lab <- states %>% 
  filter(state_abbr == "CA")

mount_lab <- states %>% 
  filter(state_abbr == "WY")

wnc_lab <- states %>% 
  filter(state_abbr == "IA")

enc_lab <- states %>% 
  filter(state_abbr == "MI")

ma_lab <- states %>% 
  filter(state_abbr == "NY")

ne_lab <- states %>% 
  filter(state_abbr == "ME")

sa_lab <- states %>% 
  filter(state_abbr == "NC")

esc_lab <- states %>% 
  filter(state_abbr == "AL")

wsc_lab <- states %>% 
  filter(state_abbr == "TX")

```

Plot map

```{r}

size_label <- 5

# Plotting
ggplot(states) +
  geom_sf(data = states, aes(fill = specific_region), color = "black", show.legend = FALSE) +
  geom_sf_label(data = west_lab, aes(label = specific_region, color=specific_region),
                size = size_label, 
                fontface = "bold", 
                color = "springgreen4", 
                fill = "white",
                hjust = 0.5,
                show.legend = FALSE) +
  geom_sf_label(data = mount_lab, aes(label = specific_region, color=specific_region),
                size = size_label, 
                fontface = "bold", 
                color = "#AFE1AF", 
                fill = "white",
                hjust = 1,
                show.legend = FALSE) +
   geom_sf_label(data = wnc_lab, aes(label = specific_region, color=specific_region),
                size = size_label, 
                fontface = "bold", 
                color = "#FAC898", 
                fill = "white",
                hjust = 0.9,
                show.legend = FALSE) +
     geom_sf_label(data = enc_lab, aes(label = specific_region, color=specific_region),
                size = size_label, 
                fontface = "bold", 
                color = "#FFA500", 
                fill = "white",
                show.legend = FALSE) +
   geom_sf_label(data = wsc_lab, aes(label = specific_region, color=specific_region),
                size = size_label, 
                fontface = "bold", 
                color = "#87CEEB", 
                fill = "white",
                show.legend = FALSE) +
    geom_sf_label(data = sa_lab, aes(label = specific_region, color=specific_region),
                size = size_label, 
                hjust = -0.3,
                fontface = "bold", 
                color = "#0F52BA", 
                fill = "white",
                show.legend = FALSE) +
   geom_sf_label(data = esc_lab, aes(label = specific_region, color=specific_region),
                size = size_label, 
                fontface = "bold", 
                color = "#6495ED", 
                fill = "white",
                show.legend = FALSE) +
   geom_sf_label(data = ma_lab, aes(label = specific_region, color=specific_region),
                size = size_label, 
                fontface = "bold", 
                color = "#FAA0A0", 
                fill = "white",
                show.legend = FALSE) +
  geom_sf_label(data = ne_lab, aes(label = specific_region, color=specific_region),
                size = size_label, 
                fontface = "bold", 
                color = "#D22B2B", 
                fill = "white",
                show.legend = FALSE) +
  labs(title = "Location of Each US Census Region")+ 
   scale_fill_manual(values = region_palette) +
   theme_void() +
  theme(
     plot.title = element_text(face="bold",
                              family = "inter",
                              size = 25,
                              hjust = 0.2)
     )


```

Number of Homes

```{r}

ggplot(data=census_any, aes(x=specific_region, y=total_us, fill=specific_region))+
  geom_bar(stat="identity") +
  scale_fill_manual(values = region_palette) +
  coord_flip() +
  theme_minimal() +
  theme(
    axis.title.x = element_blank(),
    legend.position = "none"
  )


```

Bar plot

```{r}




viridis_palette <- viridis::viridis_pal(option = "muted")(10)

viridis_palette <- viridis_palette[-c(5,2)]

census_any$label_position <- (census_any$pct / 1.5) # Adjust this formula based on your specific needs



ggplot(data=census_any, aes(x=specific_region, y=pct, fill=specific_region))+
  geom_bar(stat="identity") +
  geom_text(aes(label=scales::percent(pct, accuracy = 1), y=label_position), size = 7, color="white", ,face= "bold")+
  labs(x="", y="", 
       title="Percent of Homes Reporting ANY Energy Insecurity (2020)",
       size = "",
       subtitle = "By Census Region",
       fill = "General Census Region")+
  scale_fill_manual(values = region_palette) +
  theme_void() +
  theme(
    axis.text =  element_blank(),
     plot.title = element_text(face="bold",
                              family = "inter",
                              size = 25, 
                              hjust=0.2,
                              vjust=-5),
    plot.subtitle = element_text(face = "italic",
                                 family="inter",
                                 size = 20,
                                 vjust = -6,
                                 hjust=0.2),
    legend.title = element_text(face = "bold",
                                 family="inter",
                                 size = 15),
    legend.text = element_text(family="inter",
                                 size = 15),
    legend.position = "none"
  
  )  +
  geom_segment(aes(x = specific_region, y = pct, xend = specific_region, yend = pct+0.14), 
               color = "black", size = 0.7)+
  geom_label(data=census_any,
  aes(x = specific_region, y = pct, label = specific_region),
  position = position_stack(vjust = 1.5), # Adjust 'vjust' for label positioning
  size = 6,
  fill = "grey50", # Dark gray background for the labels
  colour = "white",
  family="inter"# White text color
) +
  coord_polar(start=0)
```
